---
name: drift-plugin-build
run-name: Build Elasticsearch Drift plugin
on:
  push:
  workflow_dispatch:

## Build and create the project on every push to the project
jobs:
  build:
    strategy:
      matrix:
        es_version:
          - 9.0.6
    runs-on: ubuntu-latest
    container:
      image: quay.io/bluebird/java-builder:ubuntu.0.1.5.jdk-21.b21
    steps:
      - uses: actions/checkout@v4
      - name: Add workspace to git safe.directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Build plugin from source
        run: |
          make ES_VERSION=${{ matrix.es_version }}
      - name: Run JUnit and Integration test suite
        run: |
          sudo chown -R cicd:cicd $GITHUB_WORKSPACE
          sudo -u cicd PATH="${PATH}" JAVA_HOME="${JAVA_HOME}" M2_HOME="${M2_HOME}" make ES_VERSION=${{ matrix.es_version }} tests
      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        with:
          check_name: Test Report ${{ matrix.es_version }}
      - name: Create zip, rpm and deb packages
        run: |
          make clean
          make ES_VERSION=${{ matrix.es_version }} PACKAGE_VERSION=${{ github.run_number }} packages
      - name: Persist drift-plugin artifacts
        uses: actions/upload-artifact@v4
        with:
          name: es-drift
          path: |
            drift/target/*.jar
            drift/target/releases/*.zip
            drift/target/releases/*.deb
            drift/target/releases/*.rpm
      - name: Publish Debian packages to Cloudsmith
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash
        run: |
          export CLOUDSMITH_API_KEY=${{ secrets.CLOUDSMITH_API_KEY }}
          for deb in $(ls drift/target/releases/*-${{ github.run_number }}_all.deb); do
            cloudsmith push deb bluebird/common/any-distro/any-version ${deb};
          done;
      - name: Publish RPM packages to Cloudsmith
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash
        run: |
          export CLOUDSMITH_API_KEY=${{ secrets.CLOUDSMITH_API_KEY }}
          for rpm in $(ls drift/target/releases/*-${{ github.run_number }}.noarch.rpm); do
            cloudsmith push rpm bluebird/common/any-distro/any-version ${rpm};
          done;

  create-github-release:
    needs:
      - build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: es-drift
      - name: Release ${{ github.ref_name }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.jar
            releases/*.zip
            releases/*.deb
            releases/*.rpm
